// part of Polish Road Set 2
// Graphic by Sojita, McZapkie
// NML code by McZapkie


// Semi-Trailer Tractor with Normal trailer (like General Purpose Truck) - switches:

//length switches
switch(FEAT_ROADVEHS, SELF, check_STTN_trailer_length_switch, cargo_type_in_veh) {  
	PASS: return 1; 
	return 7;  
}  

switch (FEAT_ROADVEHS, SELF, switch_STTN_length, position_in_consist) {
    0 : return 4;
    1 : return check_STTN_trailer_length_switch;
}

//refit text
switch(FEAT_ROADVEHS, SELF, subtype_NORMAL_TRAILER_text_switch, cargo_subtype) {  
//	ID_GEAR:	return string(STR_NONE_SUBTYPE);
	ID_BOX: 	return string(STR_BOX_SUBTYPE);  
	ID_FLAT:  	return string(STR_FLAT_SUBTYPE);
	ID_LVST:  	return string(STR_LVST_SUBTYPE);
	ID_REEF:  	return string(STR_REEFER_SUBTYPE);
	ID_OIL:  	return string(STR_OIL_SUBTYPE);
	ID_MILK:  	return string(STR_MILK_SUBTYPE);
	ID_MAIL:  	return string(STR_MAIL_SUBTYPE);
	return CB_FAILED;  
} 
switch(FEAT_ROADVEHS, SELF, NORMAL_TRAILER_text_switch, cargo_type_in_veh) {  
	PASS: return  string(STR_NONE_SUBTYPE);  
	subtype_NORMAL_TRAILER_text_switch;  
}

//refit cost
switch (FEAT_ROADVEHS, SELF, switch_STTN_check_pass, ((extra_callback_info1 & 0xFF) == PASS)) {
   0 : STTN_REFIT_SEMITRAILER_COST; //buy trailer
   1 : 0;
}
switch (FEAT_ROADVEHS, SELF, switch_STTN_check_trailer, var[0x10,8,0xFF] - cargo_subtype ) {
   0 : return 0 | CB_RESULT_AUTOREFIT; //same trailer, OK
return STTN_REFIT_SEMITRAILER_COST + STTN_REFIT_TRACTORUNIT_REFUND;  //pay for changing trailers
}
switch (FEAT_ROADVEHS, SELF, switch_cargo_STTN_check_pass, ((extra_callback_info1 & 0xFF) == PASS)) {
   0 : switch_STTN_check_trailer;
   1 : STTN_REFIT_TRACTORUNIT_REFUND; //sell trailer
}
switch (FEAT_ROADVEHS, SELF, switch_STTN_refit_cost, cargo_type_in_veh ) {
   PASS : return switch_STTN_check_pass; //pay if cargo
   return switch_cargo_STTN_check_pass;  //refund if pass, otherwise check trailer
}

//semi-trailers graphics switches
#define SEMI_TRAILERS_NORMAL_GRAPHIC_SWITCHES(Trailer_Type) \
\
switch(FEAT_ROADVEHS, SELF, check_subtype_spriteset_##Trailer_Type##_graphic_switch, cargo_subtype) {  \
  ID_BOX  : return box_spriteset_##Trailer_Type##_graphic_switch; \
  ID_FLAT : return flat_spriteset_##Trailer_Type##_graphic_switch; \
  ID_LVST : return lvst_spriteset_##Trailer_Type##_graphic; \
  ID_REEF : return food_spriteset_##Trailer_Type##_graphic; \
  ID_OIL  : return oil__spriteset_##Trailer_Type##_graphic; \
  ID_MILK : return milk_spriteset_##Trailer_Type##_graphic; \
  ID_MAIL : return mail_spriteset_##Trailer_Type##_graphic; \
} \
switch(FEAT_ROADVEHS, SELF, spriteset_check_trailer_##Trailer_Type##_switch, cargo_type_in_veh) {  \
	PASS: return  	none_spriteset_empty;  \
	return 		check_subtype_spriteset_##Trailer_Type##_graphic_switch;  \
} \


// Semi-Trailer Tractor with Normal trailer - definition 
// v_mass: tractor unit mass, t_mass: semitrailer mass
#define FREIGHT_STTN(STTN_Name, Trailer_Type, STR_V_NAME, STR_VE_DESC, idate, odate, retire, v_life, v_reliab, v_cost, v_fuelsystem, e_displacement, v_vmax, v_power, v_mass, t_mass, v_maxloadmass) \
switch (FEAT_ROADVEHS, SELF, consist_##STTN_Name##_articulated_graphic_switch, position_in_consist) { \
    0 : return spriteset_tractor_##STTN_Name##_graphic; \
    1 : return spriteset_check_trailer_##Trailer_Type##_switch; \
	return CB_FAILED; \
} \
switch (FEAT_ROADVEHS, SELF, switch_##STTN_Name##_articulated, extra_callback_info1) { \
    1 : return STTN_Name; \
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS; \
} \
switch (FEAT_ROADVEHS, SELF, switch_##STTN_Name##_text, param_load_multiplier) {    \
	1 : return string(STR_STTN_DESC, string(STR_VE_DESC), e_displacement, string(STR_VARIABLE_COSTS), v_maxloadmass/2, v_maxloadmass);   \
	2 : return string(STR_STTN_DESC, string(STR_VE_DESC), e_displacement, string(STR_VARIABLE_COSTS), v_maxloadmass, v_maxloadmass*2);   \
	3 : return string(STR_STTN_DESC, string(STR_VE_DESC), e_displacement, string(STR_VARIABLE_COSTS), v_maxloadmass*3/2, v_maxloadmass*3);   \
  return CB_FAILED;   \
}   \
  \
switch(FEAT_ROADVEHS, SELF, maxload_##STTN_Name##_subtype_switch, cargo_subtype) {  \
  ID_BOX  : min(10*param_load_multiplier * (  \
		((hasbit(cargo_classes, CC_PIECE_GOODS) && (!hasbit(cargo_classes, CC_BULK))) \
		|| hasbit(cargo_classes, CC_EXPRESS) ) * 80 / cargo_unit_weight \
		+ (hasbit(cargo_classes, CC_BULK)) * 80 / 20   \
		+ (cargo_classes == bitmask(CC_LIQUID)) * 80/32 )/10,  \
		10 * param_load_multiplier); \
 \
  ID_FLAT : (v_maxloadmass*param_load_multiplier*80/cargo_unit_weight * ((hasbit(cargo_classes, CC_PIECE_GOODS) || hasbit(cargo_classes, CC_EXPRESS)) && !(hasbit(cargo_classes, CC_COVERED) || hasbit(cargo_classes, CC_LIQUID) || hasbit(cargo_classes, CC_REFRIGERATED) ) ) )/10; \
  ID_LVST : 0; \
  ID_REEF : v_maxloadmass*param_load_multiplier*80/20 * (hasbit(cargo_classes, CC_REFRIGERATED))/10; \
  ID_OIL  : min(v_maxloadmass * 16 / cargo_unit_weight, v_maxloadmass) * param_load_multiplier/2 * (hasbit(cargo_classes, CC_LIQUID) && !hasbit(cargo_classes, CC_REFRIGERATED)); \
  ID_MILK : min(v_maxloadmass * 16 / cargo_unit_weight, v_maxloadmass * 2) * param_load_multiplier/2 * (hasbit(cargo_classes, CC_LIQUID) && hasbit(cargo_classes, CC_REFRIGERATED)); \
  ID_MAIL : min(v_maxloadmass * 16 / cargo_unit_weight, v_maxloadmass * 2) * param_load_multiplier/2 * (hasbit(cargo_classes, CC_MAIL)); \
return CB_FAILED; \
} \
switch(FEAT_ROADVEHS, SELF, maxload_trailer_##STTN_Name##_switch, cargo_type_in_veh) {  \
	PASS: return 0;  \
	MAIL: return v_maxloadmass*param_load_multiplier*(80/16 * ((cargo_subtype == ID_BOX)) + 80/8 * (cargo_subtype == ID_MAIL))/10;  \
	GOOD: return v_maxloadmass*param_load_multiplier*(80/cargo_unit_weight * ((cargo_subtype == ID_BOX)) + 80/9 * (cargo_subtype == ID_FLAT))/10;  \
	ENSP: return min(v_maxloadmass*param_load_multiplier*(80/cargo_unit_weight * (cargo_subtype == ID_FLAT) + 80/16 * (cargo_subtype == ID_BOX))/10, v_maxloadmass*param_load_multiplier*2);  \
	VEHI: return v_maxloadmass*param_load_multiplier*80/cargo_unit_weight * (cargo_subtype == ID_FLAT)/10 + (cargo_subtype == ID_BOX);  \
	FMSP: return min(v_maxloadmass*param_load_multiplier*(80/cargo_unit_weight * ((cargo_subtype == ID_FLAT) || (cargo_subtype == ID_BOX)))/10, v_maxloadmass*param_load_multiplier*2);  \
	MNSP: return min(v_maxloadmass*param_load_multiplier*(80/cargo_unit_weight* (cargo_subtype == ID_BOX) + 80/8 * (cargo_subtype == ID_FLAT))/10, v_maxloadmass*param_load_multiplier*2);  \
	LVST: return min(v_maxloadmass*param_load_multiplier*(80/cargo_unit_weight * (cargo_subtype == ID_LVST) + 50/cargo_unit_weight * (cargo_subtype == ID_BOX))/10, v_maxloadmass*param_load_multiplier*2);  \
	OIL_: return min(v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/cargo_unit_weight * (cargo_subtype == ID_OIL))/10, v_maxloadmass*param_load_multiplier/2);  \
	PETR: return min(v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/cargo_unit_weight * (cargo_subtype == ID_OIL))/10, v_maxloadmass*param_load_multiplier/2);  \
	RFPR: return min(v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/cargo_unit_weight * (cargo_subtype == ID_OIL))/10, v_maxloadmass*param_load_multiplier/2);  \
	BEER: return min(v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/16 * (cargo_subtype == ID_REEF) + 80/cargo_unit_weight * (cargo_subtype == ID_MILK))/10, v_maxloadmass*param_load_multiplier/2);  \
	EOIL: return min(v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/16 * (cargo_subtype == ID_REEF) + 80/cargo_unit_weight * (cargo_subtype == ID_MILK))/10, v_maxloadmass*param_load_multiplier/2);  \
	WATR: return v_maxloadmass*param_load_multiplier*(80/32 * (cargo_subtype == ID_BOX) + 80/18 * (cargo_subtype == ID_REEF) + 80/cargo_unit_weight * (cargo_subtype == ID_MILK))/10;  \
	BDMT: return v_maxloadmass*param_load_multiplier*((80/20)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10;  \
	STEL: return v_maxloadmass*param_load_multiplier*((80/20)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10;  \
	METL: return v_maxloadmass*param_load_multiplier*((80/20)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10;  \
	IRON: return v_maxloadmass*param_load_multiplier*((80/20)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10;  \
	WOOD: return v_maxloadmass*param_load_multiplier*((80/30)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10;  \
	WDPR: return min(v_maxloadmass*param_load_multiplier*((80/30)* (cargo_subtype == ID_BOX) + (80/cargo_unit_weight) * (cargo_subtype == ID_FLAT))/10, v_maxloadmass*param_load_multiplier*2);  \
	PAPR: return v_maxloadmass*param_load_multiplier*80/cargo_unit_weight * (cargo_subtype == ID_BOX)/10;  \
	BRCK: return v_maxloadmass*param_load_multiplier*80/cargo_unit_weight * (cargo_subtype == ID_BOX)/10;  \
        return maxload_##STTN_Name##_subtype_switch;  \
}  \
switch (FEAT_ROADVEHS, SELF, maxload_##STTN_Name##_switch, position_in_consist) { \
    0 : return 0; \
    1 : return maxload_trailer_##STTN_Name##_switch; \
}  \
switch(FEAT_ROADVEHS, SELF, switch_##STTN_Name##_maxspeed, cargo_type_in_veh) { \
	PASS: return v_vmax * 15 /20; \
	return v_vmax /2; \
} \
switch(FEAT_ROADVEHS, SELF, switch_##STTN_Name##_weight, cargo_type_in_veh) { \
	PASS: return v_mass * 4; \
	return (v_mass + t_mass)  * 4; \
} \
switch(FEAT_ROADVEHS, SELF, switch_##STTN_Name##_running_cost, cargo_type_in_veh) { \
	PASS: return min(STAFF_RUNNING_COST + max(0,((v_mass) * ((e_displacement / 10) + (v_vmax) * (v_vmax)) * v_fuelsystem) >> 15), 255); \
	return min(STAFF_RUNNING_COST * max(1, (age_in_days - max_age_in_days - 365 * retire)/365) + !vehicle_is_in_depot * max(0,((v_mass + v_maxloadmass + t_mass) * ((e_displacement / 10) + (current_speed) * (current_speed) * 14) * v_fuelsystem) >> 15), 255); \
} \
if (param_allow_truck) { \
item(FEAT_ROADVEHS, STTN_Name) { \
	property { \
	name:			   	string(STR_V_NAME, string(STR_STTN_SUFFIX)); \
	climates_available:	 	POLROAD_CLIMATES; \
	introduction_date:		date(idate, 1, 1);	    \
	model_life:     ((param_keep_old_vehs == 1) || (odate == 0)) ? VEHICLE_NEVER_EXPIRES : (param_keep_old_vehs == 2) ? odate-idate+retire+4+v_life : odate-idate+retire+4; \
	vehicle_life:		   	v_life; \
	retire_early:			retire; \
	reliability_decay:	    	v_reliab; \
	loading_speed:		  	4; \
	cost_factor:		    	v_cost;      \
	running_cost_factor:	min(STAFF_RUNNING_COST + ((v_mass + v_maxloadmass + t_mass) * ((e_displacement / 10) + (v_vmax) * (v_vmax)) * v_fuelsystem) >> 15, 255); \
	sprite_id:		      	SPRITE_ID_NEW_ROADVEH; \
	speed:			  	v_vmax/2; \
	refittable_cargo_classes:      	ALL_CARGO_CLASSES; \
	non_refittable_cargo_classes:   bitmask(CC_ARMOURED);  \
	cargo_disallow_refit:		[TOUR]; \
	misc_flags:		   	bitmask(ROADVEH_FLAG_AUTOREFIT, ROADVEH_FLAG_2CC); \
	refit_cost:		   	STTN_REFIT_SEMITRAILER_COST + STTN_REFIT_TRACTORUNIT_REFUND ; \
	cargo_age_period:	 	STANDARD_COMFORT; \
	power:			  	v_power kW; \
	running_cost_base:	   	RUNNING_COST_ROADVEH; \
	cargo_capacity:		 	v_maxloadmass/2; \
	default_cargo_type:		GOOD; \
	weight:			 	v_mass; \
	tractive_effort_coefficient:    0.4; \
	air_drag_coefficient:	   	0.24; \
	visual_effect:      	  	visual_effect(VISUAL_EFFECT_DIESEL, 2); \
	sound_effect: SOUND_TRUCK_START; \
	length:      	    		8; \
    } \
\
    graphics { \
	default:	    	consist_##STTN_Name##_articulated_graphic_switch;  \
	purchase:	   	spriteset_##STTN_Name##_purchase;  \
	articulated_part:	switch_##STTN_Name##_articulated; \
	refit_cost:		switch_STTN_refit_cost;  \
	purchase_cargo_capacity:return v_maxloadmass* param_load_multiplier/2; \
	cargo_capacity:		maxload_##STTN_Name##_switch; \
	additional_text:        switch_##STTN_Name##_text; \
	cargo_subtype_text:	NORMAL_TRAILER_text_switch; \
	colour_mapping:         switch_bulk_recolour;   \
	speed:			switch_##STTN_Name##_maxspeed; \
	weight:			switch_##STTN_Name##_weight; \
	length:			switch_STTN_length; \
	visual_effect:		switch_semi_trailer_tractor_unit_effect; \
	purchase_speed:		return v_vmax/2; \
	purchase_running_cost_factor: return min(STAFF_RUNNING_COST + max(0,((v_mass + v_maxloadmass + t_mass) * ((e_displacement / 10) + (v_vmax) * (v_vmax)) * v_fuelsystem) >> 15), 255); \
	running_cost_factor:	switch_##STTN_Name##_running_cost; \
/*	sound_effect: return switch_heavytruck_sound; */ \
    }  \
 } \
}
// Semi-Trailer Tractor definition, v_mass: tractor unit mass, t_mass: semitrailer mass
// FREIGHT_STTN(STTN_Name, Trailer_Type, STR_V_NAME, STR_VE_DESC, idate, odate, retire, v_life, v_reliab, v_cost, v_fuelsystem, e_displacement, v_vmax, v_power, v_mass, t_mass, v_maxloadmass) 

//normal 1-axle semitrailer for Chevrolet 157:
#include "../src/gfx/truck/trailers1n.pnml"
SEMI_TRAILERS_NORMAL_GRAPHIC_SWITCHES(trailers1n)
// Chevrolet semi-trailer tractor unit:
spriteset(spriteset_Chevrolet157_purchase, "src/gfx/truck/allSTT.png") { template_sprite_window_sideviewSTTN(5) }
spriteset(spriteset_tractor_Chevrolet157_graphic, "src/gfx/truck/allSTT.png") { template_spriteLTT(5) } //long nose
FREIGHT_STTN(Chevrolet157, trailers1n, STR_CHEVROLET157_NAME, STR_CHEVROLET157_DESC, 1938, 1943, 0, 12, 20, 34, DIESEL_ENGINE, 3450, 60, 58, 3, 3, 12)

//normal 1-axle semitrailer for Star C21:
#include "../src/gfx/truck/trailers1nD60.pnml"
SEMI_TRAILERS_NORMAL_GRAPHIC_SWITCHES(trailers1nD60)
// Star C21 semi-trailer tractor unit:
spriteset(spriteset_Star_C21_purchase, "src/gfx/truck/allSTT.png") { template_sprite_window_sideviewSTTN(45) }
spriteset(spriteset_tractor_Star_C21_graphic, "src/gfx/truck/allSTT.png") { template_spriteSTT(45) }
FREIGHT_STTN(Star_C21, trailers1nD60, STR_STAR_C21_NAME, STR_STAR_C21_DESC, 1957, 1976, 5, 15, 15, 32, DIESEL_ENGINE, 4188, 60, 63, 4, 4, 12) 
//normal 1-axle semitrailer for Star C28:
#include "../src/gfx/truck/trailers1nD68.pnml"
SEMI_TRAILERS_NORMAL_GRAPHIC_SWITCHES(trailers1nD68)
// Star C28 semi-trailer tractor unit:
spriteset(spriteset_Star_C28_purchase, "src/gfx/truck/allSTT.png") { template_sprite_window_sideviewSTTN(85) }
spriteset(spriteset_tractor_Star_C28_graphic, "src/gfx/truck/allSTT.png") { template_spriteSTT(85) }
FREIGHT_STTN(Star_C28, trailers1nD68, STR_STAR_C28_NAME, STR_STAR_C28_DESC, 1968, 1993, 18, 20, 5, 35, DIESEL_ENGINE, 6230, 81, 100, 4, 4, 16) 


